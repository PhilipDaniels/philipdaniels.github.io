<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phil&#39;s Blog</title>
    <link>https://www.philipdaniels.com/</link>
    <description>Recent content on Phil&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.philipdaniels.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common Unicode Characters</title>
      <link>https://www.philipdaniels.com/blog/2019/common-unicode-characters/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/common-unicode-characters/</guid>
      <description>Typing Unicode characters on Linux Hold down CTRL-SHIFT, then type the Unicode sequence. For example, for a £ (GBP, British Pound sign) which is U+00a3, type CTRL-SHIFT ua3 SPC - the space is to terminate the sequence.
Typing Unicode characters on Windows Open MS Word or Wordpad and type the code point followed by ALT-x, for example to enter a Euro sign type 20acALT-X.
Some handy characters See here for more.</description>
    </item>
    
    <item>
      <title>File Management in the Terminal</title>
      <link>https://www.philipdaniels.com/blog/2019/terminal-file-management/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/terminal-file-management/</guid>
      <description>Copying files and directories  cp manual Duplicate an entire directory including subfolders cp -r SRC DEST Create a symbolic link to a file cp -s FILE NEWLINK (equivalent to ln -s FILE NEWLINK) Create a hard link to a file cp -l FILE NEWLINK (equivalent to ln FILE NEWLINK)  Getting information  stat manual Print last access time, modify time etc. stat FILE du manualShow summary size of a directory in human language du -sh DIR  Exclude certain files --exclude=’*.</description>
    </item>
    
    <item>
      <title>File Sharing Between Linux and Windows</title>
      <link>https://www.philipdaniels.com/blog/2019/linux-windows-file-sharing/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/linux-windows-file-sharing/</guid>
      <description>Creating a Samba Share on Linux Edit /etc/samba/smb.conf adding a stanza at the bottom something like this ([slow] is the name the share will have). Notice the valid users.
[slow] path = /home/phil/slow available = yes valid users = phil read only = no browsable = yes public = yes writable = yes  Then do sudo smbpasswd -a USER and enter a Samba password for the user, then restart Samba sudo service smbd restart.</description>
    </item>
    
    <item>
      <title>Installing LibreOffice with Python Scripting Support</title>
      <link>https://www.philipdaniels.com/blog/2019/libreofffice-with-python-scripting/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/libreofffice-with-python-scripting/</guid>
      <description>See
 https://ask.libreoffice.org/en/question/154007/how-to-upgrade-libreoffice-version-using-linux-mint/ https://askubuntu.com/questions/132837/how-do-i-install-the-latest-stable-version-of-libreoffice And for python: https://ask.libreoffice.org/en/question/140787/where-does-libreoffice-expect-user-scripts-pythonjavajavascript-to-be-located-on-ubuntu/  Basically I just did:
sudo add-apt-repository ppa:libreoffice/ppa sudo apt-get update sudo apt-get upgrade # Should try dist-upgrade instead sudo apt install libreoffice # Needed to bring down the latest version sudo apt install libreoffice-script-provider-python  </description>
    </item>
    
    <item>
      <title>Installing Wine and Quicken 2000 on Linux Mint</title>
      <link>https://www.philipdaniels.com/blog/2019/installing-wine-and-quicken-on-mint/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/installing-wine-and-quicken-on-mint/</guid>
      <description>May need to install the latest Wine manually You may first need to get the latest and greatest version of Wine. Mint 18 shipped with Wine 1.6 which was ancient, I am not sure which version Mint 19 ships with since I did an upgrade. In any case, you can install the latest version of Wine by following these steps
sudo dpkg --add-architecture i386 wget -nc https://dl.winehq.org/wine-builds/Release.key sudo apt-key add Release.</description>
    </item>
    
    <item>
      <title>Linux User Management</title>
      <link>https://www.philipdaniels.com/blog/2019/linux-user-management/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/linux-user-management/</guid>
      <description>useradd manual userdel manual usermod manual passwd manual groupadd manual groupdel manual groups manual sudo manual su manual
 List all users cat /etc/passwd It’s the first column. Or awk -F : ‘{print $1, “uid=”$3, “gid=”$3}’ /etc/passwd
 List the default settings for adding a new user useradd -D The shell will often be just /bin/sh, which is not what you want
 Add a new user sudo useradd -c “Joe Bloggs” -m -s “/bin/bash” jbloggs then sudo passwd jbloggs to set his password.</description>
    </item>
    
    <item>
      <title>Process Management in the Terminal</title>
      <link>https://www.philipdaniels.com/blog/2019/process-management-in-the-terminal/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/process-management-in-the-terminal/</guid>
      <description>Signals The recommended signals to stop a program, in increasing severity, are TERM (15), INT (2), HUP (1), KILL (9)
The kill command is used to send signals to a program.
 Send a specific signal to a process: kill -INT PID or kill -2 PID The same to several processes: kill -2 PID1 PID2 PID3
 Killing processes by name
  kill processes processes by name killall http*</description>
    </item>
    
    <item>
      <title>The tar command and managing archives</title>
      <link>https://www.philipdaniels.com/blog/2019/tar-and-archives/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/tar-and-archives/</guid>
      <description>Compressing and archiving files For dealing with directories it is normal to use the tar command, see below.
 .bz2 extension is managed by the commands bzip2, bzcat and bunzip2.  Deal with a single file bzip2 FILE1 FILE2…, bzcat FILEs, bzunzip2 FILEs (the file is replaced)  .gz extension is managed by the commands gzip, zcat and gunzip.  Usage is the same as bzip2. It can also uncompress .</description>
    </item>
    
    <item>
      <title>Tmux and Vim true-color support</title>
      <link>https://www.philipdaniels.com/blog/2019/tmux-and-vim-in-truecolor/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/tmux-and-vim-in-truecolor/</guid>
      <description>You will need to compile tmux from source, you need tmux v2.2 at least.
Also need to compile Vim from source, see https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source
Then you need to get tmux working with TrueColor. See https://deductivelabs.com/en/using-true-color-vim-tmux/, especially the comments about .tmux.conf. And https://github.com/tmux/tmux/wiki/FAQ</description>
    </item>
    
    <item>
      <title>Unix Redirections</title>
      <link>https://www.philipdaniels.com/blog/2019/unix-redirections/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/unix-redirections/</guid>
      <description>Redirections  Redirect stdout to a file: &amp;gt; FILE Append stdout to a file: &amp;gt;&amp;gt; FILE Redirect stderr to a file: 2&amp;gt; FILE Redirect stdout and stderr to the same file by redirecting stream 2 to stream 1: &amp;gt; FILE 2&amp;gt;&amp;amp;1  Bash version of the above (non standard, avoid): &amp;amp;&amp;gt; FILE or &amp;amp;&amp;gt;&amp;gt; FILE for appending  Redirect stdout and stderr to different files: &amp;gt; FILE 2&amp;gt; ERRORFILE Read stdin from a file: &amp;lt; FILE Read stdin from a file and write stdout to a file: wc &amp;lt; input.</description>
    </item>
    
    <item>
      <title>Summary of Stephen Cleary&#39;s &#39;Tour of Task&#39; Series</title>
      <link>https://www.philipdaniels.com/blog/2017/tour-of-task/</link>
      <pubDate>Mon, 06 Nov 2017 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2017/tour-of-task/</guid>
      <description>Summary of Stephen Cleary&amp;rsquo;s &amp;lsquo;A Tour of Task&amp;rsquo; articles The first article
 Task as used by TPL is completely different to Task as used by async. The vast majority of Task members have no place in async code. There are two types of Task ** Delegate tasks, which have code to run ** Promise tasks, which represent an event or signal (e.g. IO or timer based) Most TPL code uses Delegate tasks across multiple threads,, most async code uses Promise tasks which don&amp;rsquo;t tie up a thread.</description>
    </item>
    
    <item>
      <title>Spacemacs - Configuring the Solarized Theme</title>
      <link>https://www.philipdaniels.com/blog/2017/spacemacs-solarized/</link>
      <pubDate>Tue, 07 Feb 2017 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2017/spacemacs-solarized/</guid>
      <description>Solarized, tredux There are at least 3 different Solarized theme packages for Emacs:
 BBatsov&amp;rsquo;s Solarized Greg Pfeil&amp;rsquo;s (aka Sellout) Solarized Steve Purcell&amp;rsquo;s (aka SanityInc) Solarized  Steve&amp;rsquo;s is based on Greg&amp;rsquo;s. Of the three, I have always used Greg&amp;rsquo;s in the past, finding it to have a comprehensive set of faces. So naturally I wanted to get it working in Spacemacs. That was a bit trickier than expected, because it uses a non-standard loading mechanism, however, I found an issue on Github that explained how to do it.</description>
    </item>
    
    <item>
      <title>Spacemacs - First Steps</title>
      <link>https://www.philipdaniels.com/blog/2017/spacemacs-first-steps/</link>
      <pubDate>Mon, 06 Feb 2017 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2017/spacemacs-first-steps/</guid>
      <description>Moving to Spacemacs I recently declared, if not quite .emacs bankruptcy , then at least Chapter 11 status. After a long time keeping my .emacs as a single file, I refactored it into a set of self contained lisp files of the form:
(require &#39;other-peoples-packages) ...my config... (provide &#39;my-package)  Then I just ensured the director with all these files was on my load-path and simply required my own little packages.</description>
    </item>
    
    <item>
      <title>Network Setup in Hyper-V and Virtual Box</title>
      <link>https://www.philipdaniels.com/blog/2016/vm-networking-overview/</link>
      <pubDate>Tue, 27 Dec 2016 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/vm-networking-overview/</guid>
      <description>Other Build Book Posts  Debian VM Setup Setup of SSH Windows VM Setup  Posts in the Build Book sequence are intended primarily as an aide-mémoire for myself; a series of steps to go through for a consistent build experience. They tend to be to the point, prescriptive and tailored for me personally.
In this article I describe the different types of switch available in Hyper-V and their equivalents in Virtual Box.</description>
    </item>
    
    <item>
      <title>Setup of Debian Virtual Machines</title>
      <link>https://www.philipdaniels.com/blog/2016/debian-vm-setup/</link>
      <pubDate>Tue, 27 Dec 2016 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/debian-vm-setup/</guid>
      <description>Other Build Book Posts  Setup of SSH Windows VM Setup Network Setup in Hyper-V and Virtual Box  Posts in the Build Book sequence are intended primarily as an aide-mémoire for myself; a series of steps to go through for a consistent build experience. They tend to be to the point, prescriptive and tailored for me personally.
Installation Steps Pick the type of Debian distribution you want. I usually go for Testing to keep up with the latest fixes - it is a rolling release.</description>
    </item>
    
    <item>
      <title>Setup of ssh</title>
      <link>https://www.philipdaniels.com/blog/2016/setup-of-ssh/</link>
      <pubDate>Tue, 27 Dec 2016 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/setup-of-ssh/</guid>
      <description>Other Build Book Posts  Debian VM Setup Windows VM Setup Network Setup in Hyper-V and Virtual Box  Posts in the Build Book sequence are intended primarily as an aide-mémoire for myself; a series of steps to go through for a consistent build experience. They tend to be to the point, prescriptive and tailored for me personally.
How SSH Works SSH stands for &amp;ldquo;Secure Shell&amp;rdquo;. As its name implies it is a network protocol for secure communication between two computers, a server - your VM - and a client, e.</description>
    </item>
    
    <item>
      <title>Setup of Windows Virtual Machines</title>
      <link>https://www.philipdaniels.com/blog/2016/windows-vm-setup/</link>
      <pubDate>Tue, 27 Dec 2016 20:14:13 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/windows-vm-setup/</guid>
      <description>Other Build Book Posts  Debian VM Setup Setup of SSH Network Setup in Hyper-V and Virtual Box  Posts in the Build Book sequence are intended primarily as an aide-mémoire for myself; a series of steps to go through for a consistent build experience. They tend to be to the point, prescriptive and tailored for me personally.
General  Do not use Windows Enterprise because this edition does not get patched and upgraded like normal Windows does.</description>
    </item>
    
    <item>
      <title>Comparing PersistentDictionary with SQLite as a Key-Value Store</title>
      <link>https://www.philipdaniels.com/blog/2016/persistent-dictionary-vs-sqlite/</link>
      <pubDate>Mon, 27 Jun 2016 20:19:45 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/persistent-dictionary-vs-sqlite/</guid>
      <description>Few choices for in-process persistent data stores When it comes to data storage, developers traditionally have had two choices:
 A full-blown database, usually running as separate process. This includes SQL databases such as MS-SQL and PostGres, and NoSQL databases such as Mongo. Hold everything in RAM in standard .Net classes such as Dictionary.  The former has the drawback that some installation is usually required, and the latter doesn&amp;rsquo;t scale to very large datasets.</description>
    </item>
    
    <item>
      <title>Hugo Cheatsheet</title>
      <link>https://www.philipdaniels.com/blog/2016/hugo-blogging-cheatsheet/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2016/hugo-blogging-cheatsheet/</guid>
      <description>A test post to see if the new blog is working, also handy for checking out themes. You really want to look at the source for this page.
Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Basic Formatting Hugo uses Github Flavoured Markdown.
 *This is italic* This is italic **this is bold** this is bold ***this is bold-italic*** this is bold-italic ~~this is strikethrough~~ this is strikethrough  You can do a link like this: [link](https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philipdaniels.com/configzilla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/configzilla/</guid>
      <description>ConfigZilla Manual Page | ConfigZillaConfigZillaConfigZilla is a tool for streamlining the management of those pesky .config files in .Net projects. The key to the ConfigZilla approach is that it creates a project called &#34;ConfigZilla&#34; in your solution, and this project then becomes the central location in which you specify the values for your config settings and create classes to access those settings. ConfigZilla generates App.config files from App.template.configs which you create; this is done on a per-project basis whenever you compile your project.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.philipdaniels.com/gitcheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/gitcheatsheet/</guid>
      <description>Phil&#39;s Git Cheatsheet    You are using an outdated browser. Please upgrade your browser to improve your experience.
           Getting Started Do this first!!! Setup .gitattributes correctly Setup .gitignore correctly Setup ~/.gitconfig correctly config [--global] --unset user.email config [--global] --edit config [--global] user.email Phil@foo.com config --list  Help verb --help man git-verb  Repository Creation and Cloning init clone url [mydir]  Using a Bare Repo as a Central Repo 1a.</description>
    </item>
    
  </channel>
</rss>