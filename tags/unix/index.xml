<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unix on Phil&#39;s Blog</title>
    <link>https://www.philipdaniels.com/tags/unix/</link>
    <description>Recent content in Unix on Phil&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.philipdaniels.com/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ripgrep Cheatsheet</title>
      <link>https://www.philipdaniels.com/blog/2019/ripgrep-cheatsheet/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/ripgrep-cheatsheet/</guid>
      <description>Ripgrep    Syntax Description     rg &amp;ndash;help &amp;#124; more Make help useful on Windows   rg -l NEEDLE List matching files only   rg -c NEEDLE List matching files, including a count   rg -i NEEDLE Search case-insensitively   rg --no-filename NEEDLE Don&amp;rsquo;t print filenames, handy when you care about the match more than the file   rg -v NEEDLE Invert matching: show lines that do not match   rg NEEDLE README.</description>
    </item>
    
    <item>
      <title>File Management in the Terminal</title>
      <link>https://www.philipdaniels.com/blog/2019/terminal-file-management/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/terminal-file-management/</guid>
      <description>Copying files and directories  cp manual Duplicate an entire directory including subfolders cp -r SRC DEST Create a symbolic link to a file cp -s FILE NEWLINK (equivalent to ln -s FILE NEWLINK) Create a hard link to a file cp -l FILE NEWLINK (equivalent to ln FILE NEWLINK)  Getting information  stat manual Print last access time, modify time etc. stat FILE du manualShow summary size of a directory in human language du -sh DIR  Exclude certain files --exclude=’*.</description>
    </item>
    
    <item>
      <title>Linux User Management</title>
      <link>https://www.philipdaniels.com/blog/2019/linux-user-management/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/linux-user-management/</guid>
      <description>useradd manual userdel manual usermod manual passwd manual groupadd manual groupdel manual groups manual sudo manual su manual
 List all users cat /etc/passwd It’s the first column. Or awk -F : ‘{print $1, “uid=”$3, “gid=”$3}’ /etc/passwd
 List the default settings for adding a new user useradd -D The shell will often be just /bin/sh, which is not what you want
 Add a new user sudo useradd -c “Joe Bloggs” -m -s “/bin/bash” jbloggs then sudo passwd jbloggs to set his password.</description>
    </item>
    
    <item>
      <title>Process Management in the Terminal</title>
      <link>https://www.philipdaniels.com/blog/2019/process-management-in-the-terminal/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/process-management-in-the-terminal/</guid>
      <description>Signals The recommended signals to stop a program, in increasing severity, are TERM (15), INT (2), HUP (1), KILL (9)
The kill command is used to send signals to a program.
 Send a specific signal to a process: kill -INT PID or kill -2 PID The same to several processes: kill -2 PID1 PID2 PID3
 Killing processes by name
  kill processes processes by name killall http*</description>
    </item>
    
    <item>
      <title>The tar command and managing archives</title>
      <link>https://www.philipdaniels.com/blog/2019/tar-and-archives/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/tar-and-archives/</guid>
      <description>Compressing and archiving files For dealing with directories it is normal to use the tar command, see below.
 .bz2 extension is managed by the commands bzip2, bzcat and bunzip2.  Deal with a single file bzip2 FILE1 FILE2…, bzcat FILEs, bzunzip2 FILEs (the file is replaced)  .gz extension is managed by the commands gzip, zcat and gunzip.  Usage is the same as bzip2. It can also uncompress .</description>
    </item>
    
    <item>
      <title>Unix Redirections</title>
      <link>https://www.philipdaniels.com/blog/2019/unix-redirections/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/unix-redirections/</guid>
      <description>Redirections  Redirect stdout to a file: &amp;gt; FILE Append stdout to a file: &amp;gt;&amp;gt; FILE Redirect stderr to a file: 2&amp;gt; FILE Redirect stdout and stderr to the same file by redirecting stream 2 to stream 1: &amp;gt; FILE 2&amp;gt;&amp;amp;1  Bash version of the above (non standard, avoid): &amp;amp;&amp;gt; FILE or &amp;amp;&amp;gt;&amp;gt; FILE for appending  Redirect stdout and stderr to different files: &amp;gt; FILE 2&amp;gt; ERRORFILE Read stdin from a file: &amp;lt; FILE Read stdin from a file and write stdout to a file: wc &amp;lt; input.</description>
    </item>
    
  </channel>
</rss>