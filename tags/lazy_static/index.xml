<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lazy_static on Phil&#39;s Blog</title>
    <link>https://www.philipdaniels.com/tags/lazy_static/</link>
    <description>Recent content in lazy_static on Phil&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.philipdaniels.com/tags/lazy_static/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Ergonomic Approach to Configuration in Rust</title>
      <link>https://www.philipdaniels.com/blog/2019/rust-configuration-example/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.philipdaniels.com/blog/2019/rust-configuration-example/</guid>
      <description>Ergonomic Configuration In most of the programs I have written so far the configuration consists of a combination of defaults, optional settings from configuration files, and command line options, in that order of precedence.
And once established, it is usually immutable.
Setting this up is not difficult, but it helps to have a worked example, as otherwise it is easy to get lost in what to call things.
I have created a worked example which has the following features:</description>
    </item>
    
  </channel>
</rss>